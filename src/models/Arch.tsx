/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 arch.glb -t -- --transform
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFBO } from '@react-three/drei'
import { useFrame, createPortal } from '@react-three/fiber'
import { PerspectiveCamera } from '@react-three/drei'

import Test from '../shaders/test/Test'
type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube018: THREE.Mesh
    Cube019: THREE.Mesh
    Cube017: THREE.Mesh
    Cube020: THREE.Mesh
    Cube013: THREE.Mesh
    Cube016: THREE.Mesh
    Cube021: THREE.Mesh
    Cube022: THREE.Mesh
    Cube023: THREE.Mesh
    Cube024: THREE.Mesh
    Cube025: THREE.Mesh
    Plane: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshStandardMaterial
  }
}

export function Arch(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/arch.glb') as GLTFResult
  // PORTAL
  const renderTarget = useFBO()
  const portal = useRef<any>()
  const portalScene = new THREE.Scene()
  const otherCamera = useRef<any>()

  useFrame((state) => {
    const {gl, camera, scene} = state
    otherCamera.current.matrixWorldInverse.copy(camera.matrixWorldInverse);

    gl.setRenderTarget(renderTarget)
    gl.render(portalScene, otherCamera.current)

    portal.current.material.map = renderTarget.texture;
    gl.setRenderTarget(null);

})
  return (
    <>
        <PerspectiveCamera manual ref={otherCamera} aspect={1 / 2} zoom={1}/>

    <group {...props} dispose={null} position={[12, 1.28, 0]} rotation={[-.02, -.1, .15]}>
      <mesh geometry={nodes.Cube.geometry} material={materials['Material.002']} position={[0, 0.14, -0.01]} scale={1.34} />
      <mesh geometry={nodes.Cube001.geometry} material={materials['Material.002']} position={[0, 1.1, -0.01]} scale={0.78} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.002']} position={[-0.33, -0.44, 0.09]} scale={[1.09, 0.14, 1.09]} />
      <mesh geometry={nodes.Cube003.geometry} material={materials['Material.002']} position={[0, -0.29, -0.8]} rotation={[0, 0, -Math.PI]} scale={[-0.95, -0.46, -1.21]} />
      <mesh geometry={nodes.Cube004.geometry} material={materials['Material.002']} position={[-0.14, -0.46, -1.06]} scale={[0.87, 0.11, 0.87]} />
      <mesh geometry={nodes.Cube005.geometry} material={materials['Material.002']} position={[0.06, 0.04, -0.36]} rotation={[-Math.PI, 0.72, -Math.PI]} scale={[0.47, 0.32, 0.79]} />
      <mesh geometry={nodes.Cube006.geometry} material={materials['Material.002']} position={[-0.13, -0.44, 1.2]} scale={[1.82, 0.14, 1.79]} />
      <mesh geometry={nodes.Cube007.geometry} material={materials['Material.002']} position={[-0.51, -0.43, 2.03]} scale={[1.3, 0.17, 1.79]} />
      <mesh geometry={nodes.Cube008.geometry} material={materials['Material.002']} position={[0.32, -0.42, 2.56]} scale={[1.82, 0.19, 1.79]} />
      <mesh geometry={nodes.Cube009.geometry} material={materials['Material.002']} position={[0.09, -0.37, 2.73]} rotation={[2.97, -0.02, -0.02]} scale={[-0.66, -0.17, -0.83]} />
      <mesh geometry={nodes.Cube010.geometry} material={materials['Material.002']} position={[-0.03, 1.65, 0.12]} rotation={[-2.98, -0.15, 3.09]} scale={[0.5, 2.34, 0.56]} />
      <mesh geometry={nodes.Cube011.geometry} material={materials['Material.002']} position={[-0.09, 3.15, 0.67]} rotation={[-2.86, -0.16, 3.09]} scale={[0.43, 0.52, 0.37]} />
      <mesh geometry={nodes.Cube012.geometry} material={materials['Material.002']} position={[-0.01, 1.47, 0]} rotation={[-3.11, -0.28, Math.PI]} scale={[0.39, 1.84, 0.44]} />
      <mesh geometry={nodes.Cube014.geometry} material={materials['Material.002']} position={[-0.13, 3.88, 1.89]} rotation={[-1.66, 0.35, -3.01]} scale={[0.11, 0.51, 0.12]} />
      <mesh geometry={nodes.Cube015.geometry} material={materials['Material.002']} position={[-0.23, 3.53, 0.8]} rotation={[-0.51, 0.11, 0.01]} scale={[-0.04, -0.07, -0.21]} />
      <mesh geometry={nodes.Cube018.geometry} material={materials['Material.002']} position={[0.47, -0.34, 4.32]} scale={[1.3, 0.33, 1.15]} />
      <mesh geometry={nodes.Cube019.geometry} material={materials['Material.002']} position={[0, 0.02, -0.77]} rotation={[0, 0.28, -Math.PI]} scale={[-0.54, -0.26, -0.69]} />
      <mesh geometry={nodes.Cube017.geometry} material={materials['Material.002']} position={[-0.1, 3.8, 1.46]} rotation={[2.74, -0.22, 0.84]} scale={[-0.03, -0.06, -0.2]} />
      <mesh geometry={nodes.Cube020.geometry} material={materials['Material.002']} position={[-0.75, -0.23, 3.86]} scale={0.31} />
      <mesh geometry={nodes.Cube013.geometry} material={materials['Material.002']} position={[-0.19, 0.14, 3.82]} rotation={[-Math.PI, 0.06, -Math.PI]} scale={1.34} />
      <mesh geometry={nodes.Cube016.geometry} material={materials['Material.002']} position={[-0.19, 1.1, 3.59]} rotation={[0, 1.04, 0]} scale={0.78} />
      <mesh geometry={nodes.Cube021.geometry} material={materials['Material.002']} position={[-0.16, 1.65, 3.69]} rotation={[-0.16, 0.09, -0.06]} scale={[0.5, 2.34, 0.56]} />
      <mesh geometry={nodes.Cube022.geometry} material={materials['Material.002']} position={[-0.07, 3.15, 3.15]} rotation={[-0.28, 0.1, -0.07]} scale={[0.43, 0.52, 0.37]} />
      <mesh geometry={nodes.Cube023.geometry} material={materials['Material.002']} position={[-0.18, 1.47, 3.81]} rotation={[-0.03, 0.22, 0]} scale={[0.39, 1.84, 0.44]} />
      <mesh geometry={nodes.Cube024.geometry} material={materials['Material.002']} position={[-0.07, 3.85, 2.59]} rotation={[-1.14, -0.21, -0.12]} scale={[0.11, 0.51, 0.12]} />
      <mesh geometry={nodes.Cube025.geometry} material={materials['Material.002']} position={[0.07, 3.53, 3.02]} rotation={[-2.63, -0.06, 3.13]} scale={[-0.04, -0.07, -0.21]} />
      <mesh ref={portal} geometry={nodes.Plane.geometry} position={[-0.06, 0.65, 2]} rotation={[0, 0, -Math.PI / 2]}>
        <meshBasicMaterial side={THREE.DoubleSide}/>
        </mesh>
    </group>

    {createPortal(
      <>
        <ambientLight intensity={1} color={"#435058"}/>
        <Test/>
        <color attach="background" args={["#262837"]} />

      </>,
      portalScene
    )}
    </>
  )
}

useGLTF.preload('/arch.glb')
